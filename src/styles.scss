@use "@angular/material" as mat;

$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
      tertiary: mat.$orange-palette,
    ),
    typography: (),
    density: (
      scale: 0,
    ),
  )
);

$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$azure-palette,
      tertiary: mat.$orange-palette,
    ),
    typography: (),
    density: (
      scale: 0,
    ),
  )
);

// Core una sola vez
@include mat.core();

// Tema por defecto (light) para SSR/hydration inicial
html {
  @include mat.all-component-themes($light-theme);
  @include mat.system-level-colors($light-theme);
  @include mat.typography-hierarchy($light-theme);
}

/* Toggle mediante clases que ya maneja Header.applyTheme */
html.mat-light-theme,
.mat-light-theme {
  @include mat.all-component-themes($light-theme);
  @include mat.system-level-colors($light-theme);
  @include mat.typography-hierarchy($light-theme);
  color-scheme: light; // asegura esquema claro
}

html.mat-dark-theme,
.mat-dark-theme {
  @include mat.all-component-themes($dark-theme);
  @include mat.system-level-colors($dark-theme);
  @include mat.typography-hierarchy($dark-theme);
  color-scheme: dark; // asegura esquema oscuro
}

/* Compat: variables usadas en tu CSS mapeadas a tokens M3 */
:root,
html,
html.mat-light-theme,
.mat-light-theme,
html.mat-dark-theme,
.mat-dark-theme {
  /* App bg/text (compat con header y layout) */
  --mat-app-background-color: var(--md-sys-color-surface);
  --mat-app-text-color: var(--md-sys-color-on-surface);

  /* Map de --mat-sys-* a Material 3 (--md-sys-color-*) */
  --mat-sys-primary: var(--md-sys-color-primary);
  --mat-sys-secondary: var(--md-sys-color-secondary);
  --mat-sys-on-surface: var(--md-sys-color-on-surface);
  --mat-sys-on-surface-variant: var(--md-sys-color-on-surface-variant);
  --mat-sys-outline-variant: var(--md-sys-color-outline-variant);
  --mat-sys-surface: var(--md-sys-color-surface);
  --mat-sys-surface-variant: var(--md-sys-color-surface-variant);
  --mat-sys-surface-container: var(--md-sys-color-surface-container);
  --mat-sys-primary-container: var(--md-sys-color-primary-container);
  --mat-sys-on-primary-container: var(--md-sys-color-on-primary-container);
  --mat-sys-secondary-container: var(--md-sys-color-secondary-container);
  --mat-sys-on-secondary-container: var(--md-sys-color-on-secondary-container);

  --header-height: 56px;
}

/* Base layout */
html,
body {
  height: 100dvh;
  width: 100dvw;
}

/* Fondo reactivo al tema en todos los contenedores raíz */
html,
body,
app-root,
app-root > main {
  background-color: var(--md-sys-color-surface); // usa directamente el token M3
  transition: background-color 0.3s ease, color 0.3s ease;
  overflow-x: hidden;
}

/* Opcional: mayor especificidad para asegurar override al cambiar de clase */
html.mat-dark-theme body,
html.mat-dark-theme app-root,
html.mat-dark-theme app-root > main {
  background-color: var(--md-sys-color-surface);
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  color: var(--md-sys-color-on-surface);

  .full-height {
    min-height: calc(100vh - var(--header-height));
  }
}

/* Elevation helpers siguen siendo útiles */
@include mat.elevation-classes();

/* Navegación por anchors suave + compensación de header fijo */
html { scroll-behavior: smooth; }

app-home,
app-about-me,
app-resume,
app-contact-me {
  display: block;
  scroll-margin-top: var(--header-height, 64px);
}
